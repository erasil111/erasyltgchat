import asyncio
import logging
import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from config import BOT_TOKEN, WEBHOOK_URL, ADMIN_USERNAMES, PAYPAL_LINK
from db import init_db, add_user, get_balance, consume_token, add_tokens_by_id, find_user_by_username

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

active_generations = {}


# ---------- Handlers ----------

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    user = message.from_user
    add_user(user.id, user.username)
    balance = get_balance(user.id)
    text = (
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! {user.first_name or '–¥—Ä—É–≥'}!\n\n"
        f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance} —Ç–æ–∫–µ–Ω(–æ–≤)\n\n"
        f"–°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–æ–±–Ω–æ–µ –≤–∏–¥–µ–æ –≤—Å–µ–≥–æ –∑–∞ 300—Ç–≥\n\n"
        f"‚ú® –ö–æ–º–∞–Ω–¥—ã:\n"
        f"/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞\n"
        f"/balance ‚Äî –±–∞–ª–∞–Ω—Å\n"
        f"/buy ‚Äî –∫—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã\n"
        f"/generate <–æ–ø–∏—Å–∞–Ω–∏–µ> ‚Äî —Å–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ\n"
        f"‚ÑπÔ∏è–ò—Å–ø–æ–ª—å–∑—É—è –±–æ—Ç–∞, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ /terms"
    )
    await message.answer(text)


@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    text = (
        "üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é Sora-2 Bot\n"
"üé¨ –ì–ï–ù–ï–†–ê–¶–ò–Ø –í–ò–î–ï–û –ò–ó –¢–ï–ö–°–¢–ê\n"
"–ö–æ–º–∞–Ω–¥–∞: /generate <–æ–ø–∏—Å–∞–Ω–∏–µ>\n"
"–ü—Ä–∏–º–µ—Ä—ã:\n"
"‚Ä¢ /generate –ö–æ—Ç –∏–≥—Ä–∞–µ—Ç –Ω–∞ –ø–∏–∞–Ω–∏–Ω–æ –≤ –¥–∂–∞–∑–æ–≤–æ–º –∫–ª—É–±–µ\n"
"‚Ä¢ /generate –ó–∞–∫–∞—Ç –Ω–∞–¥ –æ–∫–µ–∞–Ω–æ–º, –∫–∏–Ω–æ—à–æ—Ç\n"
"‚Ä¢ /generate –ü–æ–ª—ë—Ç –Ω–∞–¥ –Ω–µ–æ–Ω–æ–≤—ã–º –≥–æ—Ä–æ–¥–æ–º\n"
"üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ:\n"
"‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–∏–ø –∫–∞–¥—Ä–∞ (—à–∏—Ä–æ–∫–∏–π –ø–ª–∞–Ω, –∫—Ä—É–ø–Ω—ã–π –ø–ª–∞–Ω)\n"
"‚Ä¢ –û–ø–∏—à–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ\n"
"‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ —Å–≤–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–ª–Ω–µ—á–Ω—ã–π –¥–µ–Ω—å, —É—Ç—Ä–µ–Ω–Ω–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ)\n"
"–ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞:\n"
"–®–∏—Ä–æ–∫–∏–π –ø–ª–∞–Ω —Ä–µ–±—ë–Ω–∫–∞, –∑–∞–ø—É—Å–∫–∞—é—â–µ–≥–æ –∫—Ä–∞—Å–Ω—ã–π –≤–æ–∑–¥—É—à–Ω—ã–π –∑–º–µ–π –≤ –ø–∞—Ä–∫–µ, —Å–æ–ª–Ω–µ—á–Ω—ã–π —Å–≤–µ—Ç, –∫–∞–º–µ—Ä–∞ –ø–ª–∞–≤–Ω–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è\n"
"üñºÔ∏è –ì–ï–ù–ï–†–ê–¶–ò–Ø –í–ò–î–ï–û –ò–ó –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø\n"
"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é\n"
"–í –ø–æ–¥–ø–∏—Å–∏ —É–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤ –≤–∏–¥–µ–æ\n"
"–ë–æ—Ç —Å–æ–∑–¥–∞—Å—Ç –≤–∏–¥–µ–æ, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–æ—Ç–æ –∫–∞–∫ –ø–µ—Ä–≤—ã–π –∫–∞–¥—Ä\n"
"–ü—Ä–∏–º–µ—Ä—ã:\n"
"‚Ä¢ –§–æ—Ç–æ –∫–æ–º–Ω–∞—Ç—ã: –ö–∞–º–µ—Ä–∞ –º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ö–æ–¥–∏—Ç –∫–æ–º–Ω–∞—Ç—É\n"
"‚Ä¢ –§–æ—Ç–æ –ø–µ–π–∑–∞–∂–∞: –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –¥–æ–∂–¥—å, –¥—É–µ—Ç –≤–µ—Ç–µ—Ä\n"
"‚ö†Ô∏è –í–∞–∂–Ω–æ: –§–æ—Ç–æ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—é –≤–∏–¥–µ–æ\n"
"‚öôÔ∏è –ü–ê–†–ê–ú–ï–¢–†–´ –í–ò–î–ï–û\n"
"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 4‚Äì12 —Å–µ–∫—É–Ω–¥\n"
"–û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è:\n"
"‚Ä¢ üì± –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è (720x1280) ‚Äî –¥–ª—è Stories, Reels\n"
"–ú–æ–¥–µ–ª–∏:\n"
"‚Ä¢ üöÄ Sora-2: –±—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è, —Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ\n"
"\n"
"üí∞ –¶–ï–ù–´\n"
"Sora-2 (10 —Å–µ–∫): 700‚Ç∏\n"
"1 —Ç–æ–∫–µ–Ω = 700‚Ç∏\n"
"üì¶ –ü–ê–ö–ï–¢–´ –¢–û–ö–ï–ù–û–í /buy\n"
"‚Ä¢ 700‚Ç∏ ‚Äî 1 –≤–∏–¥–µ–æ\n"
"‚Ä¢ 1,200‚Ç∏ ‚Äî 2 –≤–∏–¥–µ–æ \n"
"‚Ä¢ 2,500‚Ç∏ ‚Äî 5 –≤–∏–¥–µ–æ \n"
"‚Ä¢ 4,400‚Ç∏ ‚Äî 10 –≤–∏–¥–µ–æ \n"
"–û–ø–ª–∞—Ç–∞: –∫–∞—Ä—Ç–æ–π (PayPal) –∏–ª–∏ Kaspi\n"
"üìä –î–†–£–ì–ò–ï –ö–û–ú–ê–ù–î–´\n"
"/balance ‚Äî –±–∞–ª–∞–Ω—Å –∏ –∏—Å—Ç–æ—Ä–∏—è\n"
"/start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
"‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n"
"Q: –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è?\n"
"A: –û—Ç 2 –¥–æ 10 –º–∏–Ω—É—Ç, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –∏ –¥–ª–∏–Ω—ã –≤–∏–¥–µ–æ\n"
"Q: –ß—Ç–æ –µ—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ —Å–æ–∑–¥–∞–ª–æ—Å—å?\n"
"A: –¢–æ–∫–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –Ω–∞ –±–∞–ª–∞–Ω—Å\n"
"Q: –ú–æ–∂–Ω–æ –ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã—Ö –ª—é–¥–µ–π?\n"
"A: –ù–µ—Ç, —Å–µ—Ä–≤–∏—Å –±–ª–æ–∫–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞—Å—Ç–æ—è—â–∏—Ö –ª—é–¥–µ–π\n"
"Q: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫?\n"
"A: –ú–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –ø–æ-—Ä—É—Å—Å–∫–∏, –Ω–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç —Ç–æ—á–Ω–µ–µ\n"
"üí¨ –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º: @erasyllk\n"
)
    await message.answer(text)

@dp.message(Command("terms"))
async def cmd_help(message: types.Message):
    text = (
        "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ\n"

"‚ö†Ô∏è –ë–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ.\n"
"–≠—Ç–æ—Ç –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç—å Sora-2 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –ø–æ –≤–∞—à–∏–º –æ–ø–∏—Å–∞–Ω–∏—è–º.  \n"
"‚ö†Ô∏è –í–∞–∂–Ω–æ: –≤—ã –Ω–µ—Å—ë—Ç–µ –ø–æ–ª–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Ç–µ–∫—Å—Ç—ã –∏ –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç–µ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞.\n"

"‚ùå –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è:\n"
"‚Äî –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω–æ–≥–æ, –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∏–ª–∏ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞  \n"
"‚Äî –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–≥–æ –∏–ª–∏ –Ω–∞—Å–∏–ª—å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞  \n"
"‚Äî –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –Ω–∞—Ä—É—à–∞—é—â–µ–≥–æ –∑–∞–∫–æ–Ω—ã –∏–ª–∏ –ø—Ä–∞–≤–∞ —Ç—Ä–µ—Ç—å–∏—Ö –ª–∏—Ü\n"

"–ë–æ—Ç –∏ –µ–≥–æ –∞–≤—Ç–æ—Ä –Ω–µ –Ω–µ—Å—É—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∏—Ö –¥–∞–ª—å–Ω–µ–π—à–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ.\n"

    )
    await message.answer(text)


@dp.message(Command("balance"))
async def cmd_balance(message: types.Message):
    user = message.from_user
    bal = get_balance(user.id)
    await message.answer(f"üí∞ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å: {bal} —Ç–æ–∫–µ–Ω(–æ–≤)")

@dp.message(Command("invite"))
async def cmd_invite(message: types.Message):
    text = (
        "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ\n"

"–ü—Ä–∏–≥–ª–∞—Å–∏ —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞\n"
"–ï—Å–ª–∏ –æ–Ω —Å–∫–∞–∂–µ—Ç —á—Ç–æ –ø—Ä–∏—à–µ–ª –æ—Ç –≤–∞—Å(–≤–∞—à user name) —Ç–æ –ø–æ–¥–∞—Ä–∏–º –≤–∞–º 50% —Å–∫–∏–¥–∫—É –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\n"
    )
    await message.answer(text)


@dp.message(Command("buy"))
async def cmd_buy(message: types.Message):
    text = (
        "üü£ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ PayPal –∏–ª–∏ –≤—Ä—É—á–Ω—É—é\n\n"
        "üì¶ –ü–∞–∫–µ—Ç—ã:\n"
        "‚Ä¢ 1 –≤–∏–¥–µ–æ ‚Äî 700‚Ç∏\n"
        "‚Ä¢ 2 –≤–∏–¥–µ–æ ‚Äî 1 200‚Ç∏\n"
        "‚Ä¢ 5 –≤–∏–¥–µ–æ ‚Äî 2 500‚Ç∏\n"
        "‚Ä¢ 10 –≤–∏–¥–µ–æ ‚Äî 4 400‚Ç∏\n\n"
        "üí∞ –î–ª—è —Ä—É—á–Ω–æ–π –æ–ø–ª–∞—Ç—ã:\n"
        "1Ô∏è‚É£ –ù–∞–ø–∏—à–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @erasyllk\n"
        "2Ô∏è‚É£ –£–∫–∞–∂–∏ —Å—É–º–º—É –∏ —Å–≤–æ–π username\n"
        "3Ô∏è‚É£ –û–ø–ª–∞—Ç–∏(–æ—Ç–ø—Ä–∞–≤—å —á–µ–∫) –∏ –∂–¥–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (5‚Äì10 –º–∏–Ω)"
    )

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ PayPal", url=PAYPAL_LINK or "https://t.me/erasyllk")],
        [InlineKeyboardButton(text="üè¶ Kaspi / Halyk / Freedom", url="https://t.me/erasyllk")]
    ])

    await message.answer(text, reply_markup=keyboard)


# –ê–¥–º–∏–Ω: /addtokens <username_or_id> <amount>
@dp.message(Command("addtokens"))
async def cmd_addtokens(message: types.Message):
    user = message.from_user
    admin_usernames = [x.strip().lstrip("@") for x in (ADMIN_USERNAMES or "").split(",") if x.strip()]
    if (user.username or "").lstrip("@") not in admin_usernames:
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    args = message.text.split()
    if len(args) < 3:
        await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /addtokens <username –∏–ª–∏ user_id> <–∫–æ–ª-–≤–æ>")
        return

    target = args[1]
    try:
        amount = int(args[2])
    except ValueError:
        await message.answer("–ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ. –£–∫–∞–∂–∏ —á–∏—Å–ª–æ.")
        return

    if target.startswith("@"):
        target = target.lstrip("@")

    target_id = None
    if target.isdigit():
        target_id = int(target)
    else:
        found = find_user_by_username(target)
        if found:
            target_id = found

    if not target_id:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ. –û–Ω –¥–æ–ª–∂–µ–Ω –±—ã–ª —Ö–æ—Ç—è –±—ã —Ä–∞–∑ –Ω–∞–ø–∏—Å–∞—Ç—å /start.")
        return

    add_tokens_by_id(target_id, amount)
    await message.answer(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {amount} —Ç–æ–∫–µ–Ω(–æ–≤) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target} (id: {target_id}).")
    try:
        await bot.send_message(target_id, f"üí≥ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞—á–∏—Å–ª–∏–ª –≤–∞–º {amount} —Ç–æ–∫–µ–Ω(–æ–≤).")
    except Exception as e:
        logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –Ω–∞—á–∏—Å–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤: %s", e)


# ---------- –ê–¥–º–∏–Ω: /resetchat <username_or_id> ----------
@dp.message(Command("resetchat"))
async def cmd_resetchat(message: types.Message):
    user = message.from_user
    admin_usernames = [x.strip().lstrip("@") for x in (ADMIN_USERNAMES or "").split(",") if x.strip()]
    if (user.username or "").lstrip("@") not in admin_usernames:
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    args = message.text.split()
    if len(args) < 2:
        await message.answer("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /resetchat <username –∏–ª–∏ user_id>")
        return

    target = args[1]
    target_id = None

    # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω —á–∏—Å–ª–æ–≤–æ–π user_id
    if target.isdigit():
        target_id = int(target)
    else:
        # –ò—â–µ–º –ø–æ username –≤ –±–∞–∑–µ
        found = find_user_by_username(target.lstrip("@"))
        if found:
            target_id = found

    if not target_id:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")
        return

    # –°–Ω–∏–º–∞–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    if active_generations.get(target_id):
        active_generations.pop(target_id, None)
        await message.answer(f"‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target} ({target_id}) —Å–±—Ä–æ—à–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –æ–Ω –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–¥–µ–æ.")
        try:
            await bot.send_message(target_id, "‚ö†Ô∏è –¢–≤–æ—è –ø—Ä–µ–¥—ã–¥—É—â–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–±—Ä–æ—à–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ.")
        except Exception:
            pass
    else:
        await message.answer(f"‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target} ({target_id}) –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.")



@dp.message(Command("generate"))
async def cmd_generate(message: types.Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–¥—ë—Ç –ª–∏ —É–∂–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
    if active_generations.get(user_id):
        await message.answer("‚öôÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ –µ—â—ë —Å–æ–∑–¥–∞—ë—Ç—Å—è. –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ üôå")
        return

    try:
        args = message.text.split(maxsplit=1)
        if len(args) < 2 or not args[1].strip():
            await message.answer("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /generate <–æ–ø–∏—Å–∞–Ω–∏–µ>")
            return

        description = args[1].strip()

        ok = consume_token(user_id)
        if not ok:
            await message.answer("üí∏ –£ —Ç–µ–±—è 0 —Ç–æ–∫–µ–Ω–æ–≤. –ö—É–ø–∏ —Ç–æ–∫–µ–Ω—ã ‚Äî /buy")
            return

        # –°—Ç–∞–≤–∏–º —Ñ–ª–∞–≥ **—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫**
        active_generations[user_id] = True

        await message.answer("‚úÖ –¢–æ–∫–µ–Ω —Å–ø–∏—Å–∞–Ω. –í–∏–¥–µ–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 5‚Äì10 –º–∏–Ω—É—Ç...")
        asyncio.create_task(_background_generate(user_id, message.chat.id, description, message.from_user.username or ""))

    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –≤ cmd_generate: %s", e)
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        add_tokens_by_id(user_id, 1)


    # —Ñ–ª–∞–≥ —Å–Ω–∏–º–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Ñ–æ–Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏


# ---------- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ —Ñ–æ—Ç–æ ----------
@dp.message(lambda m: m.photo)
async def handle_photo(message: types.Message):
    user_id = message.from_user.id

    if active_generations.get(user_id):
        await message.answer("‚öôÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ –µ—â—ë —Å–æ–∑–¥–∞—ë—Ç—Å—è. –ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ üôå")
        return

    try:
        caption = message.caption or ""
        photo = message.photo[-1]
        file_id = photo.file_id

        if not caption.strip():
            await message.answer("‚ö†Ô∏è –î–æ–±–∞–≤—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫ —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã —è –ø–æ–Ω—è–ª, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å.")
            return

        ok = consume_token(user_id)
        if not ok:
            await message.answer("üí∏ –£ —Ç–µ–±—è 0 —Ç–æ–∫–µ–Ω–æ–≤. –ö—É–ø–∏ —Ç–æ–∫–µ–Ω—ã ‚Äî /buy")
            return

        # –°—Ç–∞–≤–∏–º —Ñ–ª–∞–≥ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫
        active_generations[user_id] = True

        await message.answer("‚úÖ –¢–æ–∫–µ–Ω —Å–ø–∏—Å–∞–Ω. –í–∏–¥–µ–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 5‚Äì10 –º–∏–Ω—É—Ç...")
        asyncio.create_task(_background_generate_photo(user_id, message.chat.id, caption, file_id, message.from_user.username or ""))

    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –≤ handle_photo: %s", e)
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        add_tokens_by_id(user_id, 1)



# ---------- background workers ----------
async def _background_generate(user_id: int, chat_id: int, prompt: str, username: str):
    """
    –†–∞–±–æ—Ç–∞–µ—Ç —Å n8n: –∂–¥—ë—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –∏ —Ç–∞–π–º–∞—É—Ç—ã.
    ‚öôÔ∏è –¢–æ–∫–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–µ.
    """
    try:
        timeout = aiohttp.ClientTimeout(total=25 * 60)
        async with aiohttp.ClientSession(timeout=timeout) as session:
            payload = {"prompt": prompt, "user_id": user_id, "username": username}
            logger.info(f"‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º payload –≤ n8n: {payload}")

            async with session.post(WEBHOOK_URL, json=payload) as resp:
                text = await resp.text()
                logger.info(f"n8n –æ—Ç–≤–µ—Ç–∏–ª status={resp.status}")

                # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ ---
                if resp.status == 524:
                    logger.warning("‚ö†Ô∏è Cloudflare timeout 524 ‚Äî –≤–∏–¥–µ–æ –µ—â—ë –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è.")
                    await bot.send_message(chat_id, "üïê –í–∏–¥–µ–æ –µ—â—ë —Å–æ–∑–¥–∞—ë—Ç—Å—è, —è –ø—Ä–∏—à–ª—é —Å—Å—ã–ª–∫—É –ø–æ–∑–∂–µ.")
                    # —Ç–æ–∫–µ–Ω —Å—á–∏—Ç–∞–µ–º –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–º
                    return

                if resp.status >= 500:
                    logger.error(f"n8n –≤–µ—Ä–Ω—É–ª 500: {text[:200]}")
                    await bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
                    add_tokens_by_id(user_id, 1)
                    return

                if resp.status >= 400:
                    logger.error(f"–û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ {resp.status}: {text[:200]}")
                    await bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ.")
                    add_tokens_by_id(user_id, 1)
                    return

                try:
                    data = await resp.json()
                except Exception:
                    logger.warning("–û—Ç–≤–µ—Ç n8n –Ω–µ JSON ‚Äî –≤–∏–¥–µ–æ, –≤–æ–∑–º–æ–∂–Ω–æ, –µ—â—ë –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ.")
                    await bot.send_message(chat_id, "üïê –í–∏–¥–µ–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è, –ø—Ä–∏—à–ª—é, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ.")
                    return  # —Ç–æ–∫–µ–Ω –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON ---
                if not data:
                    logger.warning("–û—Ç–≤–µ—Ç n8n –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON")
                    await bot.send_message(chat_id, "‚ùå –í–∏–¥–µ–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏.\nüí∞ –¢–æ–∫–µ–Ω –≤–æ–∑–≤—Ä–∞—â—ë–Ω.")
                    add_tokens_by_id(user_id, 1)
                    return

                fail_msg = data.get("failMsg") or data.get("error") or ""
                fail_code = data.get("failCode") or ""
                video_url = data.get("video_url") or data.get("videoUrl")
                state = (data.get("state") or data.get("status") or "").lower()

                # --- –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ---
                if "suggestive" in fail_msg.lower() or "racy" in fail_msg.lower() or "not allowed" in fail_msg.lower():
                    await bot.send_message(chat_id, "üö´ –ù–µ–ª—å–∑—è –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏–ª–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –ª–∏—Ü–∞.\nüí∞ –¢–æ–∫–µ–Ω –≤–æ–∑–≤—Ä–∞—â—ë–Ω.")
                    add_tokens_by_id(user_id, 1)
                    return

        # --- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç ---
        state = (data.get("state") or data.get("status") or "").lower()
        fail_msg = data.get("failMsg") or data.get("error") or ""
        video_url = data.get("video_url") or data.get("videoUrl")

        if state in ("fail", "failed", "error") or "cancel" in fail_msg.lower():
            logger.error(f"–û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏: {fail_msg}")
            add_tokens_by_id(user_id, 1)
            await bot.send_message(
                chat_id,
                f"‚ùå –í–∏–¥–µ–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å: {fail_msg or '–æ—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏'}.\nüí∞ –¢–æ–∫–µ–Ω –≤–æ–∑–≤—Ä–∞—â—ë–Ω."
            )
            return

        if not video_url:
            logger.info("–í–∏–¥–µ–æ –ø–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤–æ (–Ω–µ—Ç video_url).")
            await bot.send_message(chat_id, "üïê –í–∏–¥–µ–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è, —è –ø—Ä–∏—à–ª—é —Å—Å—ã–ª–∫—É –ø–æ–∑–∂–µ.")
            # —Ç–æ–∫–µ–Ω –æ—Å—Ç–∞—ë—Ç—Å—è —Å–ø–∏—Å–∞–Ω–Ω—ã–º
            return

        # --- –í—Å—ë –æ–∫ ---
        try:
            await bot.send_video(chat_id, video=video_url, caption="üé¨ –í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!")
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")
            await bot.send_message(chat_id, f"üé¨ –í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ! –°—Å—ã–ª–∫–∞: {video_url}")

    except Exception as exc:
        logger.exception(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {exc}")
        await bot.send_message(chat_id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –í–∏–¥–µ–æ –≤—Å—ë –µ—â—ë –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è.")
        # —Ç–æ–∫–µ–Ω –æ—Å—Ç–∞—ë—Ç—Å—è —Å–ø–∏—Å–∞–Ω–Ω—ã–º, –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º

    finally:
        active_generations.pop(user_id, None)


async def _background_generate_photo(user_id: int, chat_id: int, prompt: str, file_id: str, username: str):
    """
    –†–∞–±–æ—Ç–∞–µ—Ç —Å n8n: –∂–¥—ë—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –ø–æ —Ñ–æ—Ç–æ.
    ‚öôÔ∏è –¢–æ–∫–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–π –æ—à–∏–±–∫–µ.
    """
    if not WEBHOOK_URL:
        logger.error("WEBHOOK_URL –Ω–µ –∑–∞–¥–∞–Ω –≤ config.py/.env")
        await bot.send_message(chat_id, "‚ùå –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: WEBHOOK_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        add_tokens_by_id(user_id, 1)
        return

    try:
        timeout = aiohttp.ClientTimeout(total=25 * 60)
        async with aiohttp.ClientSession(timeout=timeout) as session:
            # --- –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ ---
            file_url = None
            try:
                file_obj = await bot.get_file(file_id)
                file_path = file_obj.file_path
                file_url = f"https://api.telegram.org/file/bot{BOT_TOKEN}/{file_path}"
                logger.info(f"–ü–æ–ª—É—á–∏–ª–∏ file_path={file_path} -> file_url={file_url}")
            except Exception as e:
                logger.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å file_path —á–µ—Ä–µ–∑ bot.get_file: %s", e)

            # --- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ n8n ---
            payload = {
                "photo_file_id": file_id,
                "photo_url": file_url,
                "prompt": prompt,
                "user_id": user_id,
                "username": username
            }
            logger.info(f"‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ-payload –≤ n8n: {payload}")

            async with session.post(WEBHOOK_URL, json=payload) as resp:
                resp_text = await resp.text()
                logger.info(f"n8n PHOTO RESP status={resp.status}")

                # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ ---
                if resp.status == 524:
                    logger.warning("‚ö†Ô∏è Cloudflare timeout 524 ‚Äî –≤–∏–¥–µ–æ –µ—â—ë –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è.")
                    await bot.send_message(chat_id, "üïê –í–∏–¥–µ–æ –µ—â—ë —Å–æ–∑–¥–∞—ë—Ç—Å—è, —è –ø—Ä–∏—à–ª—é —Å—Å—ã–ª–∫—É, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ.")
                    return  # —Ç–æ–∫–µ–Ω —Å—á–∏—Ç–∞–µ–º –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–º

                if resp.status >= 500:
                    logger.error(f"n8n –≤–µ—Ä–Ω—É–ª 500: {resp_text[:200]}")
                    await bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
                    add_tokens_by_id(user_id, 1)
                    return

                if resp.status >= 400:
                    logger.error(f"–û—à–∏–±–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ {resp.status}: {resp_text[:200]}")
                    await bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ.")
                    add_tokens_by_id(user_id, 1)
                    return

                # --- –ü–∞—Ä—Å–∏–º JSON ---
                try:
                    data = await resp.json()
                except Exception:
                    logger.warning("–û—Ç–≤–µ—Ç n8n –Ω–µ JSON ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –≤–∏–¥–µ–æ –µ—â—ë –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è.")
                    await bot.send_message(chat_id, "üïê –í–∏–¥–µ–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è, –ø—Ä–∏—à–ª—é –ø–æ–∑–∂–µ.")
                    return  # —Ç–æ–∫–µ–Ω –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º

        # --- –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç ---

        if not data:
            logger.warning("–û—Ç–≤–µ—Ç n8n –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON")
            await bot.send_message(chat_id, "‚ùå –í–∏–¥–µ–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏.\nüí∞ –¢–æ–∫–µ–Ω –≤–æ–∑–≤—Ä–∞—â—ë–Ω.")
            add_tokens_by_id(user_id, 1)
            return
        
        state = (data.get("state") or data.get("status") or "").lower()
        fail_msg = data.get("failMsg") or data.get("error") or ""
        video_url = data.get("video_url") or data.get("videoUrl")

        if "suggestive" in fail_msg.lower() or "racy" in fail_msg.lower() or "not allowed" in fail_msg.lower():
           await bot.send_message(chat_id, "üö´ –ù–µ–ª—å–∑—è –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ —Ä–µ–∞–ª—å–Ω—ã—Ö –ª—é–¥–µ–π –∏–ª–∏ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç.\nüí∞ –¢–æ–∫–µ–Ω –≤–æ–∑–≤—Ä–∞—â—ë–Ω.")
           add_tokens_by_id(user_id, 1)
           return


        if state in ("fail", "failed", "error") or "cancel" in fail_msg.lower():
            logger.error(f"–û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏: {fail_msg}")
            add_tokens_by_id(user_id, 1)
            await bot.send_message(
                chat_id,
                f"‚ùå –í–∏–¥–µ–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å: {fail_msg or '–æ—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏'}.\nüí∞ –¢–æ–∫–µ–Ω –≤–æ–∑–≤—Ä–∞—â—ë–Ω."
            )
            return

        if not video_url:
            logger.info("–í–∏–¥–µ–æ –ø–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤–æ (–Ω–µ—Ç video_url).")
            await bot.send_message(chat_id, "üïê –í–∏–¥–µ–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è, –ø—Ä–∏—à–ª—é —Å—Å—ã–ª–∫—É, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ.")
            return  # —Ç–æ–∫–µ–Ω –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º

        # --- –£—Å–ø–µ—à–Ω–æ: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ ---
        try:
            await bot.send_video(chat_id, video=video_url, caption="üé¨ –í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!")
        except Exception as e:
            logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ: {e}")
            await bot.send_message(chat_id, f"üé¨ –í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ! –°—Å—ã–ª–∫–∞: {video_url}")

    except Exception as exc:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –∏–∑ —Ñ–æ—Ç–æ: {exc}")
        try:
            await bot.send_message(chat_id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –í–∏–¥–µ–æ –≤—Å—ë –µ—â—ë –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è.")
        except Exception:
            pass
        # —Ç–æ–∫–µ–Ω –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º ‚Äî —Ç.–∫. –≤–∏–¥–µ–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ

    finally:
        # –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–Ω–æ–≤–∞ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
        active_generations.pop(user_id, None)




# ---------- startup ----------
async def main():
    init_db()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    logger.info("WEBHOOK_URL = %s", WEBHOOK_URL)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
